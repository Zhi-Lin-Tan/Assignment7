name: CI/CD Pipeline for LEMP App

# This workflow triggers on a push event to the "main" branch
on:
  push:
    branches:
      - main

jobs:
  # --- JOB 1: Build images and push to Docker Hub ---
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Backend image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: backend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/lemp-backend:latest

      - name: Build and push Frontend image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: frontend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/lemp-frontend:latest

  # --- JOB 2: Copy configuration files to the VM ---
  copy-init-sql:
    runs-on: ubuntu-latest
    needs: build-and-push # This job runs only after "build-and-push" succeeds
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install SSH Key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: Add SSH host to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Create .env file and copy deployment files to VM
        run: |
          # Create the deployment directory
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "mkdir -p /opt/lemp/db"

          # Create the .env file on the VM
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "
            echo 'MYSQL_ROOT_PASSWORD=supersecretroot' > /opt/lemp/.env && \
            echo 'DB_HOST=db' >> /opt/lemp/.env && \
            echo 'DB_USER=appuser' >> /opt/lemp/.env && \
            echo 'DB_PASSWORD=changeme' >> /opt/lemp/.env && \
            echo 'DB_NAME=appdb' >> /opt/lemp/.env
          "

          # Copy the docker-compose and init.sql files
          scp -r docker-compose.prod.yml ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/opt/lemp/docker-compose.yml
          scp -r db/init ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/opt/lemp/db/

  # --- JOB 3: Pull the new images and restart the services ---
  deploy:
    runs-on: ubuntu-latest
    needs: copy-init-sql # This job runs only after "copy-init-sql" succeeds
    steps:
      - name: Install SSH Key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: Add SSH host to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy application on VM by pulling images and restarting
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "
            cd /opt/lemp && \
            docker compose --env-file .env pull && \
            docker compose --env-file .env up -d
          "